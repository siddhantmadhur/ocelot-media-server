// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.28.0
// source: query.sql

package storage

import (
	"context"

	"github.com/jackc/pgx/v5/pgtype"
)

const getAllUsers = `-- name: GetAllUsers :many
SELECT uuid, username, email_address, metadata, created_at, edited_at, deleted_at
	FROM auth.users
`

type GetAllUsersRow struct {
	Uuid         pgtype.UUID
	Username     string
	EmailAddress string
	Metadata     []byte
	CreatedAt    pgtype.Timestamp
	EditedAt     pgtype.Timestamp
	DeletedAt    pgtype.Timestamp
}

func (q *Queries) GetAllUsers(ctx context.Context) ([]GetAllUsersRow, error) {
	rows, err := q.db.Query(ctx, getAllUsers)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []GetAllUsersRow
	for rows.Next() {
		var i GetAllUsersRow
		if err := rows.Scan(
			&i.Uuid,
			&i.Username,
			&i.EmailAddress,
			&i.Metadata,
			&i.CreatedAt,
			&i.EditedAt,
			&i.DeletedAt,
		); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
